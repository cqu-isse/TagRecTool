<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lican.community.mapper.MessageMapper">

    <resultMap id="Message" type="com.lican.community.entity.Message">
        <id column="id" property="id"></id>
        <result column="from_id" property="fromId"></result>
        <result column="to_id" property="toId"></result>
        <result column="coversation_id" property="conversationId"></result>
        <result column="content" property="content"></result>
        <result column="status" property="status"></result>
        <result column="create_time" property="createTime"></result>
    </resultMap>

    <sql id="selectFields">
        id, from_id, to_id, coversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, coversation_id, content, status, create_time
    </sql>

    <select id="selectConversations" resultMap="Message">
        select <include refid="selectFields"></include>
        from message where id in
        (
            select max(id) from message
            where status !=2
            and from_id !=1
            and from_id = #{userId}
            or to_id = #{userId}
            group by coversation_id
        )
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(m.maxid) from
        (
            select max(id) as maxid
            from message
            where status !=2
            and from_id !=1
            and from_id = #{userId}
            or to_id = #{userId}
            group by coversation_id
        ) as m
    </select>

    <select id="selectLetters" resultMap="Message">
        select <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id != 1
        and coversation_id = #{conversationId}
        order by id desc
        limit #{offset}, #{limit}
    </select>

    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status != 2
        and from_id != 1
        and coversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id)
        from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!=null and conversationId!=''">
            and coversation_id = #{conversationId}
        </if>
    </select>


    <insert id="insertMessage">
        insert into message(<include refid="insertFields"></include>)
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

</mapper>
